# fastlane/Fastfile

default_platform(:ios)

platform :ios do
  desc "Upload a build from Bazel to TestFlight"
  lane :beta do
    # 1. Determine the IPA path with multiple fallback options
    ipa_path = ENV['FASTLANE_IPA_PATH']
    
    # If not provided via environment, search for IPA files
    if ipa_path.nil? || ipa_path.empty?
      UI.message("FASTLANE_IPA_PATH not set, searching for IPA files...")
      
      # Search in common Bazel output locations
      search_paths = [
        '../bazel-bin/CrossSumsSimple/CrossSumsSimple_ipa.ipa',
        '../bazel-bin/**/CrossSumsSimple_ipa.ipa',
        '../bazel-bin/**/*.ipa'
      ]
      
      search_paths.each do |pattern|
        found_files = Dir.glob(File.expand_path(pattern, __dir__))
        unless found_files.empty?
          ipa_path = found_files.first
          UI.message("Found IPA file using pattern '#{pattern}': #{ipa_path}")
          break
        end
      end
    end
    
    # 2. Validate that the IPA file exists
    if ipa_path.nil? || ipa_path.empty? || !File.exist?(ipa_path)
      # List available files for debugging
      UI.message("Available files in bazel-bin:")
      bazel_bin_path = File.expand_path('../bazel-bin', __dir__)
      if Dir.exist?(bazel_bin_path)
        Dir.glob("#{bazel_bin_path}/**/*.ipa").each do |file|
          UI.message("  - #{file}")
        end
      end
      
      UI.user_error!("IPA file not found. Searched path: #{ipa_path}")
    end
    
    UI.message("Using IPA file at: #{ipa_path}")
    
    # 3. Authenticate and Upload to TestFlight
    # Fastlane will automatically use the API Key from your GitHub secrets
    # and the app configuration (like app_identifier) from your Appfile.
    #
    # The 'build_app' step is GONE. We just upload the IPA from the path
    # that we received from the GitHub Actions environment variable.
    upload_to_testflight(
      ipa: ipa_path,
      skip_waiting_for_build_processing: true,
      changelog: "New build uploaded automatically from GitHub Actions.",
      app_platform: "ios"
    )

    # You can add other steps here after the upload is complete.
    # For example, send a notification to a Slack channel.
    # slack(
    #   message: "Successfully uploaded new build of Cross Sums to TestFlight! ðŸŽ‰"
    # )

    puts "Build successfully uploaded to TestFlight!"
  end
end
